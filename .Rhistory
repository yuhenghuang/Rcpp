library(RcppArmadillo)
library(Rcpp)
options(rcpp.cache.dir = "D:\\Programming\\Advanced_R\\Rcpp_temp")
install.packages("Zelig")
data(turnout)
install.packages('zeligverse')
library(tidyverse)
data(turnout)
devtools::install_github('IQSS/Zelig')
install.packages("MatchIt")
devtools::install_github('IQSS/Zelig')
install.packages("Formula")
devtools::install_github('IQSS/Zelig')
install.packages("rio")
devtools::install_github('IQSS/Zelig')
install.packages("abind")
devtools::install_github('IQSS/Zelig')
install.packages("MatrixModels")
install.packages("C:/Users/HUANGã€€YUHENG/AppData/Local/Temp/RtmpsbYdKl/fileda203aa33962/Zelig_5.1.6.tar.gz", type = "source", repos = NULL)
library(Zelig)
data(turnout)
head(turnout)
fit0 <- glm(vote ~ income + educate + age,
data = turnout,
family = binomial(link = "probit"))
fit0
sourceCpp("./EM_Algorithm.cpp")
sourceCpp("./EM_Algorithm.cpp")
mY <- matrix(turnout$vote)
mX <- cbind(1,
turnout$income,
turnout$educate,
turnout$age
)
fit1 <- em1(
y = mY,
X = mX,
maxit = 20
)
fit1$beta
head(fit1$eystar)
sourceCpp("./EM_Algorithm.cpp")
fit2 <- em2(
y = mY,
X = mX,
maxit = 20
)
fit2$beta
head(fit2$eystar)
sourceCpp("./EM_Algorithm.cpp")
fit3 <- em3(
y = mY,
X = mX,
maxit = 100
)
fit3$beta
head(fit2$eystar)
head(fit3$eystar)
Sys.setenv("PKG_CXXFLAGS" = "-fopenmp")
Sys.setenv("PKG_LIBS" = "-fopenmp")
fit4 <- em4(
y = mY,
X = mX,
maxit = 100
)
sourceCpp("./EM_Algorithm.cpp")
fit4 <- em4(
y = mY,
X = mX,
maxit = 100
)
identical(fit3$beta, fit4$beta)
library(microbenchmark)
microbenchmark(
seq = (em3(y = mY,
X = mX,
maxit = 100)
),
par = (em4(y = mY,
X = mX,
maxit = 100,
nthr = 4)
),
times = 20
)
microbenchmark(
seq = (em3(y = mY,
X = mX,
maxit = 100)
),
par = (em4(y = mY,
X = mX,
maxit = 100,
nthr = 2)
),
times = 20
)
microbenchmark(
seq = (em3(y = mY,
X = mX,
maxit = 100)
),
par = (em4(y = mY,
X = mX,
maxit = 100,
nthr = 4)
),
times = 20
)
library(Rcpp)
# optional
# redirect cache directory of rcpp
options(rcpp.cache.dir = "D:\\Programming\\Advanced_R\\Rcpp_temp")
Sys.setenv("PKG_CXXFLAGS"="-std=c++11")
sourceCpp("C++11.cpp")
useAuto()
useInitLists()
ls = useInitLists()
ls
typeof(ls)
simpleProd(1:5)
sourceCpp("Rout.cpp")
sourceCpp("Rout.cpp")
ShowValue(1.23)
sourceCpp("Rout.cpp")
rm(ShowValue())
rm(ShowValue)
mat <- matrix(1:9, 3, 3)
showMatrix(mat)
sourceCpp("Rout.cpp")
sourceCpp("Rout.cpp")
callPrint(1:3)
callPrint(LETTERS[1:3])
callPrint(mat)
callPrint(globalenv())
sourceCpp("Rout.cpp")
userOperator(1:10)
userOperator(mat)
sourceCpp("Rout.cpp")
sourceCpp("Rout.cpp")
rm(userOperator())
rm(userOperator)
useOperatorOnVector(1:10)
useOperatorOnMatrix(mat)
sourceCpp("Timer.R")
sourceCpp("Timer.cpp")
res <- useTimer()
res
diff(res)
